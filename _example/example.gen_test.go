// Code generated by plumage - DO NOT EDIT.

package example

import (
	"fmt"
	"time"
)

type BaseStruct struct {
	ID_ ID
}

func (v BaseStruct) ID() ID {
	return v.ID_
}

type Child1Struct struct {
	ID_       ID
	Stringer_ fmt.Stringer
	Hoge_     time.Time
}

func (v Child1Struct) ID() ID {
	return v.ID_
}

func (v Child1Struct) Stringer() fmt.Stringer {
	return v.Stringer_
}

func (v Child1Struct) Hoge() time.Time {
	return v.Hoge_
}

type Child2Struct struct {
	ID_   ID
	Fuga_ *string
	Piyo_ *time.Time
}

func (v Child2Struct) ID() ID {
	return v.ID_
}

func (v Child2Struct) Fuga() *string {
	return v.Fuga_
}

func (v Child2Struct) Piyo() *time.Time {
	return v.Piyo_
}

type XStruct struct {
	Int_              int
	StarInt_          *int
	IntList_          []int
	StarIntList_      []*int
	IntListList_      [][]int
	StarIntListList_  [][]*int
	Time_             time.Time
	StarTime_         *time.Time
	TimeList_         []time.Time
	StarTimeList_     []*time.Time
	TimeListList_     [][]time.Time
	StarTimeListList_ [][]*time.Time
	ID_               ID
	StarID_           *ID
	IDList_           []ID
	StarIDList_       []*ID
	IDListList_       [][]ID
	StarIDListList_   [][]*ID
	Base_             Base
	BaseList_         []Base
}

func (v XStruct) Int() int {
	return v.Int_
}

func (v XStruct) StarInt() *int {
	return v.StarInt_
}

func (v XStruct) IntList() []int {
	return v.IntList_
}

func (v XStruct) StarIntList() []*int {
	return v.StarIntList_
}

func (v XStruct) IntListList() [][]int {
	return v.IntListList_
}

func (v XStruct) StarIntListList() [][]*int {
	return v.StarIntListList_
}

func (v XStruct) Time() time.Time {
	return v.Time_
}

func (v XStruct) StarTime() *time.Time {
	return v.StarTime_
}

func (v XStruct) TimeList() []time.Time {
	return v.TimeList_
}

func (v XStruct) StarTimeList() []*time.Time {
	return v.StarTimeList_
}

func (v XStruct) TimeListList() [][]time.Time {
	return v.TimeListList_
}

func (v XStruct) StarTimeListList() [][]*time.Time {
	return v.StarTimeListList_
}

func (v XStruct) ID() ID {
	return v.ID_
}

func (v XStruct) StarID() *ID {
	return v.StarID_
}

func (v XStruct) IDList() []ID {
	return v.IDList_
}

func (v XStruct) StarIDList() []*ID {
	return v.StarIDList_
}

func (v XStruct) IDListList() [][]ID {
	return v.IDListList_
}

func (v XStruct) StarIDListList() [][]*ID {
	return v.StarIDListList_
}

func (v XStruct) Base() Base {
	return v.Base_
}

func (v XStruct) BaseList() []Base {
	return v.BaseList_
}

func NewBaseStruct(v Base) Base {
	if v == nil {
		return nil
	}
	switch t := v.(type) {
	case Child1:
		return NewChild1Struct(t)
	case Child2:
		return NewChild2Struct(t)
	default:
		return BaseStruct{
			ID_: v.ID(),
		}
	}
}

func NewBaseStructList(vs []Base) []Base {
	ret := make([]Base, 0, len(vs))
	for _, v := range vs {
		ret = append(ret, NewBaseStruct(v))
	}
	return ret
}

func NewChild1Struct(v Child1) Child1 {
	if v == nil {
		return nil
	}
	switch v.(type) {
	default:
		return Child1Struct{
			ID_:       v.ID(),
			Stringer_: v.Stringer(),
			Hoge_:     v.Hoge(),
		}
	}
}

func NewChild1StructList(vs []Child1) []Child1 {
	ret := make([]Child1, 0, len(vs))
	for _, v := range vs {
		ret = append(ret, NewChild1Struct(v))
	}
	return ret
}

func NewChild2Struct(v Child2) Child2 {
	if v == nil {
		return nil
	}
	switch v.(type) {
	default:
		return Child2Struct{
			ID_:   v.ID(),
			Fuga_: v.Fuga(),
			Piyo_: v.Piyo(),
		}
	}
}

func NewChild2StructList(vs []Child2) []Child2 {
	ret := make([]Child2, 0, len(vs))
	for _, v := range vs {
		ret = append(ret, NewChild2Struct(v))
	}
	return ret
}

func NewXStruct(v X) X {
	if v == nil {
		return nil
	}
	switch v.(type) {
	default:
		return XStruct{
			Int_:              v.Int(),
			StarInt_:          v.StarInt(),
			IntList_:          v.IntList(),
			StarIntList_:      v.StarIntList(),
			IntListList_:      v.IntListList(),
			StarIntListList_:  v.StarIntListList(),
			Time_:             v.Time(),
			StarTime_:         v.StarTime(),
			TimeList_:         v.TimeList(),
			StarTimeList_:     v.StarTimeList(),
			TimeListList_:     v.TimeListList(),
			StarTimeListList_: v.StarTimeListList(),
			ID_:               v.ID(),
			StarID_:           v.StarID(),
			IDList_:           v.IDList(),
			StarIDList_:       v.StarIDList(),
			IDListList_:       v.IDListList(),
			StarIDListList_:   v.StarIDListList(),
			Base_:             NewBaseStruct(v.Base()),
			BaseList_:         NewBaseStructList(v.BaseList()),
		}
	}
}

func NewXStructList(vs []X) []X {
	ret := make([]X, 0, len(vs))
	for _, v := range vs {
		ret = append(ret, NewXStruct(v))
	}
	return ret
}
